name: CI

on: [push, pull_request]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install build dependencies
      run: sudo apt-get install -y build-essential autoconf automake libtool cmake lcov
    - name: Build
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Coverage -DPYTEST_OPTS="--redis-executable=redis/src/redis-server -v"
        make
    - name: Checkout Redis
      uses: actions/checkout@v2
      with:
        repository: 'redis/redis'
        ref: 'unstable'
        path: 'redis'
    - name: Build Redis
      run: cd redis && make -j 4 gcov
    - name: Setup Python for testing
      uses: actions/setup-python@v1
      with:
        python-version: '3.9'
        architecture: 'x64'
    - name: Install Python dependencies
      run:
        python -m pip install -r tests/integration/requirements.txt
    - name: Run tests
      run: |
        cd build
        make coverage
    - name: Generate coverage info
      run:
        geninfo -o coverage.info .
    - name: Upload to codecov
      uses: codecov/codecov-action@v2

  test-sanitizer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install build dependencies
        run: sudo apt-get install -y build-essential autoconf automake libtool cmake lcov leiningen
      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DSANITIZER=address -DPYTEST_OPTS="--redis-executable=redis/src/redis-server -v"
          make
      - name: Checkout Redis
        uses: actions/checkout@v2
        with:
          repository: 'redis/redis'
          ref: 'unstable'
          path: 'redis'
      - name: Build Redis
        run: cd redis && make -j 4 SANITIZER=address
      - name: Checkout elle-cli
        uses: actions/checkout@v2
        with:
          repository: 'ligurio/elle-cli'
          path: 'elle-cli'
      - name: Build elle-cli
        run: cd elle-cli && lein deps && lein uberjar
      - name: Setup Python for testing
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install Python dependencies
        run:
          python -m pip install -r tests/integration/requirements.txt
      - name: Run tests
        run: |
          cd build
          make tests

  test-style:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install build dependencies
        run: sudo apt-get install -y build-essential autoconf automake libtool cmake lcov clang-format colordiff
      - name: Check Style - src
        run: |
          clang-format -n -Werror -style=file:src/.clang-format src/* || true
          colordiff -u <(cat src/*) <(clang-format -style=file:src/.clang-format src/*)
      - name: CheckStyle - unit tests
        run: |
          clang-format -n -Werror -style=file:tests/unit/.clang-format tests/unit/* || true
          colordiff -u <(cat tests/unit/*) <(clang-format -style=file:tests/unit/.clang-format tests/unit/*)
