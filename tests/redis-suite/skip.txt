-- Blocking commands not supported
BLPOP with variadic LPUSH
Linked LMOVEs
client unblock tests
.*B[RL]POP.*
.*B[RLZ]MPOP.*
.*BLMOVE.*
.*B[LR]POP.*
.*BZM?POP_?MIN.*
.*BZM?POP_?MAX.*
LPOP/RPOP/LMPOP NON-BLOCK or BLOCK against non list value


-- RESP3 Not supported
-- See: https://github.com/RedisLabs/redisraft/issues/100
.*RESP3.*

-- Streams not supported
-- See: https://github.com/RedisLabs/redisraft/issues/59
.*XREAD.*
.*XADD.*
.*XRANGE.*
COPY basic usage for stream
Keyspace notifications: stream events test
lazy free a stream with all types of metadata
lazy free a stream with deleted cgroup

-- Timeouts and termination of Lua scripts is not possible when scripts are
-- replicated and executed by individual nodes.
EXEC and script timeout
MULTI-EXEC body and script timeout
just EXEC and script timeout
Blocking commands ignores the timeout
Timedout read-only scripts can be killed by SCRIPT KILL even when use pcall
Timedout script does not cause a false dead client
Timedout script link is still usable after Lua returns
Timedout scripts that modified data can't be killed by SCRIPT KILL
Timedout read-only scripts can be killed by SCRIPT KILL

-- MULTI/EXEC handling incompatibilities, mainly becuase RedisRaft implements
-- its own logic while passing some non-data commands to Redis. Consider our
-- options with Module API extensions to better control this.
MUTLI / EXEC basics
WATCH inside MULTI is not allowed
EXEC fails if there are errors while queueing commands #1
If EXEC aborts, the client MULTI state is cleared
EXEC works on WATCHed key not modified
After successful EXEC key is no longer watched
After failed EXEC key is no longer watched
It is possible to UNWATCH
FLUSHALL does not touch non affected keys
FLUSHDB does not touch non affected keys
DISCARD should clear the WATCH dirty flag on the client
DISCARD should UNWATCH all the keys
MULTI and script timeout
command stats for MULTI

-- RAFT command prefix shows up in SLOWLOG.
SLOWLOG - Rewritten commands are logged as their original command

-- RAFT command prefix shows up in MONITOR
MONITOR can log executed commands
MONITOR can log commands issued by the scripting engine
MONITOR correctly handles multi-exec cases

-- TODO: check what's wrong
UNLINK can reclaim memory in background

-- Blocked clients not supported
Test read commands are not blocked by client pause
Test write commands are paused by RO
